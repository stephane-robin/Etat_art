Les compétences travaillées

Un travail pratique

- amélioration des connaissances en Python
- création d'un notebook de documentation en anglais et d'une docstring
- travail de portabilité du code
- création d'un environnement de dévrloppement
- utilisation d'un environnement de développement intégré PyCharm
- utilisation de l'outil de versionnement Git
- création d'une interface en ligne de commnande à l'aide du module argparse
- choix de l'outil d'empaquetage et de gestion des dépendances, création et publication d'un package sur PyPI avec Poetry
- création d'une campagne de tests du package
- création de machines virtuelles pour effectuer les tests sur différents systèmes d'exploitation, et création d'un environnement de tests
- travail de compréhension des mots-clés en bio-informatique
- amélioration des connaissances relatices aux commandes bash sous Linux

Composition d'un package standard

__init__.py
__main__.py
setup.py
requirements.txt
LICENSE
README.md
MANIFEST.in

Le choix de Poetry

pip, pyenv, venv, conda, setuptools, pipenv, poetry

Composition d'un package sous Poetry

dist contenant crisprbuilder_tb-0.1.0.tar.gz et crisprbuilder_tb-0.1.0-py3-none-any.whl
crisprbuilder_tb
crisprbuilder_tb.egg-info
poetry.lock
pyproject.toml
README.rst
tests

Les principales commandes Poetry

poetry new crisprbuilder_tb
poetry add xlrd
poetry install
poetry build
poetry publish
pip install crisprbuilder_tb

Fonctionnement d'un package

Deux types de packages : import packages et distribution packages

L'interpréteur cherche le module __main__.py prioritairement, qui se trouve dans crisprbuilder_tb, lui-même installé dans /local/lib/python3.8/site-packages ou /anaconda3/bin

La création d'un environnement de développement

venv, pyenv, pip

La campagne de tests

tests unitaires
tests d'intégration
tests de non-régression
tests de performance
tests de validation
tests d'installation

Conclusion

